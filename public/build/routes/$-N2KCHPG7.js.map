{
  "version": 3,
  "sources": ["../../../app/routes/$.jsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\routes\\\\\\\\$.jsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\routes\\\\$.jsx\");\n  import.meta.hot.lastModified = \"1759533529003.3206\";\n}\n// REMIX HMR END\n\nimport { useRouteError } from '@remix-run/react';\nimport { Error } from '~/layouts/error';\nexport async function loader() {\n  throw new Response(null, {\n    status: 404,\n    statusText: 'Not found'\n  });\n}\nexport const meta = () => {\n  return [{\n    title: '404 | Redacted'\n  }];\n};\nexport function ErrorBoundary() {\n  _s();\n  const error = useRouteError();\n  return <Error error={error} />;\n}\n_s(ErrorBoundary, \"oAgjgbJzsRXlB89+MoVumxMQqKM=\", false, function () {\n  return [useRouteError];\n});\n_c = ErrorBoundary;\nvar _c;\n$RefreshReg$(_c, \"ErrorBoundary\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqCS;AApCT,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,6BAA+B,EAAE;AAAA,EAC1E;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAoB;AACpB,cAAY,IAAI,eAAe;AACjC;AAWO,IAAM,OAAO,MAAM;AACxB,SAAO,CAAC;AAAA,IACN,OAAO;AAAA,EACT,CAAC;AACH;AACO,SAAS,gBAAgB;AAC9B,KAAG;AACH,QAAM,QAAQ,cAAc;AAC5B,SAAO,mDAAC,SAAM,SAAP;AAAA;AAAA;AAAA;AAAA,SAAqB;AAC9B;AACA,GAAG,eAAe,gCAAgC,OAAO,WAAY;AACnE,SAAO,CAAC,aAAa;AACvB,CAAC;AACD,KAAK;AACL,IAAI;AACJ,aAAa,IAAI,eAAe;AAEhC,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}

{
  "version": 3,
  "sources": ["../../../app/components/theme-provider/theme-provider.jsx", "../../../app/components/theme-provider/index.js"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\components\\\\\\\\theme-provider\\\\\\\\theme-provider.jsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\components\\\\theme-provider\\\\theme-provider.jsx\");\n  import.meta.hot.lastModified = \"1759533528987.0044\";\n}\n// REMIX HMR END\n\nimport GothamBoldItalic from '~/assets/fonts/gotham-bold-italic.woff2';\nimport GothamBold from '~/assets/fonts/gotham-bold.woff2';\nimport GothamBookItalic from '~/assets/fonts/gotham-book-italic.woff2';\nimport GothamBook from '~/assets/fonts/gotham-book.woff2';\nimport GothamMediumItalic from '~/assets/fonts/gotham-medium-italic.woff2';\nimport GothamMedium from '~/assets/fonts/gotham-medium.woff2';\nimport IPAGothic from '~/assets/fonts/ipa-gothic.woff2';\nimport { createContext, useContext } from 'react';\nimport { classes, media } from '~/utils/style';\nimport { themes, tokens } from './theme';\nexport const ThemeContext = createContext({});\nexport const ThemeProvider = ({\n  theme = 'dark',\n  children,\n  className,\n  as: Component = 'div',\n  toggleTheme,\n  ...rest\n}) => {\n  _s();\n  const parentTheme = useTheme();\n  const isRootProvider = !parentTheme.theme;\n  return <ThemeContext.Provider value={{\n    theme,\n    toggleTheme: toggleTheme || parentTheme.toggleTheme\n  }}>\r\n      {isRootProvider && children}\r\n      {/* Nested providers need a div to override theme tokens */}\r\n      {!isRootProvider && <Component className={classes(className)} data-theme={theme} {...rest}>\r\n          {children}\r\n        </Component>}\r\n    </ThemeContext.Provider>;\n};\n_s(ThemeProvider, \"wx/O0zHKMflp//dbND8uyV8Pn1o=\", false, function () {\n  return [useTheme];\n});\n_c = ThemeProvider;\nexport function useTheme() {\n  _s2();\n  const currentTheme = useContext(ThemeContext);\n  return currentTheme;\n}\n\n/**\r\n * Squeeze out spaces and newlines\r\n */\n_s2(useTheme, \"k3RAQkdJKyotGBSeeZK8LkvRfUc=\");\nexport function squish(styles) {\n  return styles.replace(/\\s\\s+/g, ' ');\n}\n\n/**\r\n * Transform theme token objects into CSS custom property strings\r\n */\nexport function createThemeProperties(theme) {\n  return squish(Object.keys(theme).map(key => `--${key}: ${theme[key]};`).join('\\n\\n'));\n}\n\n/**\r\n * Transform theme tokens into a React CSSProperties object\r\n */\nexport function createThemeStyleObject(theme) {\n  let style = {};\n  for (const key of Object.keys(theme)) {\n    style[`--${key}`] = theme[key];\n  }\n  return style;\n}\n\n/**\r\n * Generate media queries for tokens\r\n */\nexport function createMediaTokenProperties() {\n  return squish(Object.keys(media).map(key => {\n    return `\n        @media (max-width: ${media[key]}px) {\n          :root {\n            ${createThemeProperties(tokens[key])}\n          }\n        }\n      `;\n  }).join('\\n'));\n}\nconst layerStyles = squish(`\n  @layer theme, base, components, layout;\n`);\nconst tokenStyles = squish(`\n  :root {\n    ${createThemeProperties(tokens.base)}\n  }\n\n  ${createMediaTokenProperties()}\n\n  [data-theme='dark'] {\n    ${createThemeProperties(themes.dark)}\n  }\n\n  [data-theme='light'] {\n    ${createThemeProperties(themes.light)}\n  }\n`);\nconst fontStyles = squish(`\n  @font-face {\n    font-family: Gotham;\n    font-weight: 400;\n    src: url(${GothamBook}) format('woff2');\n    font-display: block;\n    font-style: normal;\n  }\n\n  @font-face {\n    font-family: Gotham;\n    font-weight: 400;\n    src: url(${GothamBookItalic}) format('woff2');\n    font-display: block;\n    font-style: italic;\n  }\n\n  @font-face {\n    font-family: Gotham;\n    font-weight: 500;\n    src: url(${GothamMedium}) format('woff2');\n    font-display: block;\n    font-style: normal;\n  }\n\n  @font-face {\n    font-family: Gotham;\n    font-weight: 500;\n    src: url(${GothamMediumItalic}) format('woff2');\n    font-display: block;\n    font-style: italic;\n  }\n\n  @font-face {\n    font-family: Gotham;\n    font-weight: 700;\n    src: url(${GothamBold}) format('woff2');\n    font-display: block;\n    font-style: normal;\n  }\n\n  @font-face {\n    font-family: Gotham;\n    font-weight: 700;\n    src: url(${GothamBoldItalic}) format('woff2');\n    font-display: block;\n    font-style: italic;\n  }\n\n  @font-face {\n    font-family: IPA Gothic;\n    font-weight: 400;\n    src: url(${IPAGothic}) format('woff2');\n    font-display: swap;\n    font-style: normal;\n  }\n`);\nexport const themeStyles = squish(`\n  ${layerStyles}\n\n  @layer theme {\n    ${tokenStyles}\n    ${fontStyles}\n  }\n`);\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\nimport.meta.hot = __hmr__.createHotContext(\n//@ts-expect-error\n\"app\\\\components\\\\theme-provider\\\\index.js\"\n);\nimport.meta.hot.lastModified = \"1759533528987.0044\";\n}\n// REMIX HMR END\n\nexport { ThemeProvider, themeStyles, ThemeContext, useTheme } from './theme-provider';\r\nexport { themes } from './theme';\r\n"],
  "mappings": "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",
  "names": []
}

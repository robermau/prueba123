{
  "version": 3,
  "sources": ["../../../app/routes/home/displacement-sphere.jsx", "../../../app/routes/home/displacement-sphere.module.css"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\routes\\\\\\\\home\\\\\\\\displacement-sphere.jsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\routes\\\\home\\\\displacement-sphere.jsx\");\n}\n// REMIX HMR END\n\nimport { useTheme } from '~/components/theme-provider';\nimport { Transition } from '~/components/transition';\nimport { useReducedMotion, useSpring } from 'framer-motion';\nimport { useInViewport, useWindowSize } from '~/hooks';\nimport { startTransition, useEffect, useRef } from 'react';\nimport { AmbientLight, DirectionalLight, LinearSRGBColorSpace, Mesh, MeshPhongMaterial, PerspectiveCamera, Scene, SphereGeometry, UniformsUtils, Vector2, WebGLRenderer } from 'three';\nimport { media } from '~/utils/style';\nimport { throttle } from '~/utils/throttle';\nimport { cleanRenderer, cleanScene, removeLights } from '~/utils/three';\nconst fragmentShader = await fetch('/shaders/carousel-fragment.glsl').then(r => r.text());\nconst vertexShader = await fetch('/shaders/carousel-vertex.glsl').then(r => r.text());\nimport styles from './displacement-sphere.module.css';\nconst springConfig = {\n  stiffness: 30,\n  damping: 20,\n  mass: 2\n};\nexport const DisplacementSphere = props => {\n  _s();\n  const {\n    theme\n  } = useTheme();\n  const start = useRef(Date.now());\n  const canvasRef = useRef();\n  const mouse = useRef();\n  const renderer = useRef();\n  const camera = useRef();\n  const scene = useRef();\n  const lights = useRef();\n  const uniforms = useRef();\n  const material = useRef();\n  const geometry = useRef();\n  const sphere = useRef();\n  const reduceMotion = useReducedMotion();\n  const isInViewport = useInViewport(canvasRef);\n  const windowSize = useWindowSize();\n  const rotationX = useSpring(0, springConfig);\n  const rotationY = useSpring(0, springConfig);\n  useEffect(() => {\n    const {\n      innerWidth,\n      innerHeight\n    } = window;\n    mouse.current = new Vector2(0.8, 0.5);\n    renderer.current = new WebGLRenderer({\n      canvas: canvasRef.current,\n      antialias: false,\n      alpha: true,\n      powerPreference: 'high-performance',\n      failIfMajorPerformanceCaveat: true\n    });\n    renderer.current.setSize(innerWidth, innerHeight);\n    renderer.current.setPixelRatio(1);\n    renderer.current.outputColorSpace = LinearSRGBColorSpace;\n    camera.current = new PerspectiveCamera(54, innerWidth / innerHeight, 0.1, 100);\n    camera.current.position.z = 52;\n    scene.current = new Scene();\n    material.current = new MeshPhongMaterial();\n    material.current.onBeforeCompile = shader => {\n      uniforms.current = UniformsUtils.merge([shader.uniforms, {\n        time: {\n          type: 'f',\n          value: 0\n        }\n      }]);\n      shader.uniforms = uniforms.current;\n      shader.vertexShader = vertexShader;\n      shader.fragmentShader = fragmentShader;\n    };\n    startTransition(() => {\n      geometry.current = new SphereGeometry(32, 128, 128);\n      sphere.current = new Mesh(geometry.current, material.current);\n      sphere.current.position.z = 0;\n      sphere.current.modifier = Math.random();\n      scene.current.add(sphere.current);\n    });\n    return () => {\n      cleanScene(scene.current);\n      cleanRenderer(renderer.current);\n    };\n  }, []);\n  useEffect(() => {\n    const dirLight = new DirectionalLight(0xffffff, theme === 'light' ? 1.8 : 2.0);\n    const ambientLight = new AmbientLight(0xffffff, theme === 'light' ? 2.7 : 0.4);\n    dirLight.position.z = 200;\n    dirLight.position.x = 100;\n    dirLight.position.y = 100;\n    lights.current = [dirLight, ambientLight];\n    lights.current.forEach(light => scene.current.add(light));\n    return () => {\n      removeLights(lights.current);\n    };\n  }, [theme]);\n  useEffect(() => {\n    const {\n      width,\n      height\n    } = windowSize;\n    const adjustedHeight = height + height * 0.3;\n    renderer.current.setSize(width, adjustedHeight);\n    camera.current.aspect = width / adjustedHeight;\n    camera.current.updateProjectionMatrix();\n\n    // Render a single frame on resize when not animating\n    if (reduceMotion) {\n      renderer.current.render(scene.current, camera.current);\n    }\n    if (width <= media.mobile) {\n      sphere.current.position.x = 14;\n      sphere.current.position.y = 10;\n    } else if (width <= media.tablet) {\n      sphere.current.position.x = 18;\n      sphere.current.position.y = 14;\n    } else {\n      sphere.current.position.x = 22;\n      sphere.current.position.y = 16;\n    }\n  }, [reduceMotion, windowSize]);\n  useEffect(() => {\n    const onMouseMove = throttle(event => {\n      const position = {\n        x: event.clientX / window.innerWidth,\n        y: event.clientY / window.innerHeight\n      };\n      rotationX.set(position.y / 2);\n      rotationY.set(position.x / 2);\n    }, 100);\n    if (!reduceMotion && isInViewport) {\n      window.addEventListener('mousemove', onMouseMove);\n    }\n    return () => {\n      window.removeEventListener('mousemove', onMouseMove);\n    };\n  }, [isInViewport, reduceMotion, rotationX, rotationY]);\n  useEffect(() => {\n    let animation;\n    const animate = () => {\n      animation = requestAnimationFrame(animate);\n      if (uniforms.current !== undefined) {\n        uniforms.current.time.value = 0.00005 * (Date.now() - start.current);\n      }\n      sphere.current.rotation.z += 0.001;\n      sphere.current.rotation.x = rotationX.get();\n      sphere.current.rotation.y = rotationY.get();\n      renderer.current.render(scene.current, camera.current);\n    };\n    if (!reduceMotion && isInViewport) {\n      animate();\n    } else {\n      renderer.current.render(scene.current, camera.current);\n    }\n    return () => {\n      cancelAnimationFrame(animation);\n    };\n  }, [isInViewport, reduceMotion, rotationX, rotationY]);\n  return <Transition in timeout={3000} nodeRef={canvasRef}>\r\n      {({\n      visible,\n      nodeRef\n    }) => <canvas aria-hidden className={styles.canvas} data-visible={visible} ref={nodeRef} {...props} />}\r\n    </Transition>;\n};\n_s(DisplacementSphere, \"2bULdpi2BvRvy2RH5wPOwopZ4nc=\", false, function () {\n  return [useTheme, useReducedMotion, useInViewport, useWindowSize, useSpring, useSpring];\n});\n_c = DisplacementSphere;\nvar _c;\n$RefreshReg$(_c, \"DisplacementSphere\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "export default {\"canvas\":\"displacement-sphere-module__canvas__17BOs\"};"],
  "mappings": "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",
  "names": []
}

{
  "version": 3,
  "sources": ["../../../app/components/carousel/carousel.jsx", "../../../app/components/carousel/carousel.module.css", "../../../app/components/carousel/index.js"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\components\\\\\\\\carousel\\\\\\\\carousel.jsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\components\\\\carousel\\\\carousel.jsx\");\n}\n// REMIX HMR END\n\nimport { animate, useReducedMotion } from 'framer-motion';\nimport { useInViewport } from '~/hooks';\nimport { useCallback, useEffect, useRef, useState } from 'react';\nimport { Color, LinearFilter, Mesh, OrthographicCamera, PlaneGeometry, LinearSRGBColorSpace, Scene, ShaderMaterial, WebGLRenderer } from 'three';\nimport { resolveSrcFromSrcSet } from '~/utils/image';\nimport { cssProps } from '~/utils/style';\nimport { cleanRenderer, cleanScene, textureLoader } from '~/utils/three';\nimport styles from './carousel.module.css';\nconst fragment = await fetch('/shaders/carousel-fragment.glsl').then(r => r.text());\nconst vertex = await fetch('/shaders/carousel-vertex.glsl').then(r => r.text());\nfunction determineIndex(imageIndex, index, images, direction) {\n  if (index !== null) return index;\n  const length = images.length;\n  const prevIndex = (imageIndex - 1 + length) % length;\n  const nextIndex = (imageIndex + 1) % length;\n  const finalIndex = direction > 0 ? nextIndex : prevIndex;\n  return finalIndex;\n}\nexport const Carousel = ({\n  width,\n  height,\n  images,\n  placeholder,\n  ...rest\n}) => {\n  _s();\n  const [dragging, setDragging] = useState(false);\n  const [imageIndex, setImageIndex] = useState(0);\n  const [loaded, setLoaded] = useState(false);\n  const [showPlaceholder, setShowPlaceholder] = useState(true);\n  const [textures, setTextures] = useState();\n  const [canvasRect, setCanvasRect] = useState();\n  const canvas = useRef();\n  const imagePlane = useRef();\n  const geometry = useRef();\n  const material = useRef();\n  const scene = useRef();\n  const camera = useRef();\n  const renderer = useRef();\n  const animating = useRef(false);\n  const swipeDirection = useRef();\n  const lastSwipePosition = useRef();\n  const scheduledAnimationFrame = useRef();\n  const reduceMotion = useReducedMotion();\n  const inViewport = useInViewport(canvas, true);\n  const placeholderRef = useRef();\n  const initSwipeX = useRef();\n  const currentImageAlt = `Slide ${imageIndex + 1} of ${images.length}. ${images[imageIndex].alt}`;\n  useEffect(() => {\n    if (dragging) {\n      document.body.style.cursor = 'grabbing';\n    }\n    return () => {\n      document.body.style.cursor = '';\n    };\n  }, [dragging]);\n  useEffect(() => {\n    const cameraOptions = [width / -2, width / 2, height / 2, height / -2, 1, 1000];\n    renderer.current = new WebGLRenderer({\n      canvas: canvas.current,\n      antialias: false,\n      alpha: true,\n      powerPreference: 'high-performance',\n      failIfMajorPerformanceCaveat: true\n    });\n    camera.current = new OrthographicCamera(...cameraOptions);\n    scene.current = new Scene();\n    renderer.current.setPixelRatio(2);\n    renderer.current.setClearColor(0x111111, 1.0);\n    renderer.current.setSize(width, height);\n    renderer.current.domElement.style.width = '100%';\n    renderer.current.domElement.style.height = 'auto';\n    scene.current.background = new Color(0x111111);\n    camera.current.position.z = 1;\n    return () => {\n      animating.current = false;\n      cleanScene(scene.current);\n      cleanRenderer(renderer.current);\n    };\n  }, [height, width]);\n  useEffect(() => {\n    let mounted = true;\n    const loadImages = async () => {\n      const anisotropy = renderer.current.capabilities.getMaxAnisotropy();\n      const texturePromises = images.map(async image => {\n        const imageSrc = image.srcSet ? await resolveSrcFromSrcSet(image) : image.src;\n        const imageTexture = await textureLoader.loadAsync(imageSrc);\n        await renderer.current.initTexture(imageTexture);\n        imageTexture.colorSpace = LinearSRGBColorSpace;\n        imageTexture.minFilter = LinearFilter;\n        imageTexture.magFilter = LinearFilter;\n        imageTexture.anisotropy = anisotropy;\n        imageTexture.generateMipmaps = false;\n        return imageTexture;\n      });\n      const textures = await Promise.all(texturePromises);\n\n      // Cancel if the component has unmounted during async code\n      if (!mounted) return;\n      material.current = new ShaderMaterial({\n        uniforms: {\n          dispFactor: {\n            type: 'f',\n            value: 0\n          },\n          direction: {\n            type: 'f',\n            value: 1\n          },\n          currentImage: {\n            type: 't',\n            value: textures[0]\n          },\n          nextImage: {\n            type: 't',\n            value: textures[1]\n          },\n          reduceMotion: {\n            type: 'b',\n            value: reduceMotion\n          }\n        },\n        vertexShader: vertex,\n        fragmentShader: fragment,\n        transparent: false,\n        opacity: 1\n      });\n      geometry.current = new PlaneGeometry(width, height, 1);\n      imagePlane.current = new Mesh(geometry.current, material.current);\n      imagePlane.current.position.set(0, 0, 0);\n      scene.current.add(imagePlane.current);\n      setLoaded(true);\n      setTextures(textures);\n      requestAnimationFrame(() => {\n        renderer.current.render(scene.current, camera.current);\n      });\n    };\n    if (inViewport && !loaded) {\n      loadImages();\n    }\n    return () => {\n      mounted = false;\n    };\n  }, [height, images, inViewport, loaded, reduceMotion, width]);\n  const goToIndex = useCallback(({\n    index,\n    direction = 1\n  }) => {\n    if (!textures) return;\n    setImageIndex(index);\n    const {\n      uniforms\n    } = material.current;\n    uniforms.nextImage.value = textures[index];\n    uniforms.direction.value = direction;\n    const onComplete = () => {\n      uniforms.currentImage.value = textures[index];\n      uniforms.dispFactor.value = 0;\n      animating.current = false;\n    };\n    if (uniforms.dispFactor.value !== 1) {\n      animating.current = true;\n      animate(uniforms.dispFactor.value, 1, {\n        type: 'spring',\n        stiffness: 100,\n        damping: 20,\n        restSpeed: 0.001,\n        restDelta: 0.001,\n        onUpdate: value => {\n          uniforms.dispFactor.value = value;\n        },\n        onComplete\n      });\n    }\n  }, [textures]);\n  const navigate = useCallback(({\n    direction,\n    index = null,\n    ...rest\n  }) => {\n    if (!loaded) return;\n    if (animating.current) {\n      cancelAnimationFrame(scheduledAnimationFrame.current);\n      scheduledAnimationFrame.current = requestAnimationFrame(() => navigate({\n        direction,\n        index,\n        ...rest\n      }));\n      return;\n    }\n    const finalIndex = determineIndex(imageIndex, index, textures, direction);\n    goToIndex({\n      index: finalIndex,\n      direction: direction,\n      ...rest\n    });\n  }, [goToIndex, imageIndex, loaded, textures]);\n  const onNavClick = useCallback(index => {\n    if (index === imageIndex) return;\n    const direction = index > imageIndex ? 1 : -1;\n    navigate({\n      direction,\n      index\n    });\n  }, [imageIndex, navigate]);\n  useEffect(() => {\n    const handleResize = () => {\n      const rect = canvas.current.getBoundingClientRect();\n      setCanvasRect(rect);\n    };\n    window.addEventListener('resize', handleResize);\n    handleResize();\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n  useEffect(() => {\n    let animation;\n    const animate = () => {\n      animation = requestAnimationFrame(animate);\n      if (animating.current) {\n        renderer.current.render(scene.current, camera.current);\n      }\n    };\n    animation = requestAnimationFrame(animate);\n    return () => {\n      cancelAnimationFrame(animation);\n    };\n  }, []);\n  useEffect(() => {\n    if (placeholder) {\n      const purgePlaceholder = () => {\n        setShowPlaceholder(false);\n      };\n      const placeholderElement = placeholderRef.current;\n      placeholderElement.addEventListener('transitionend', purgePlaceholder);\n      return () => {\n        if (placeholderElement) {\n          placeholderElement.removeEventListener('transitionend', purgePlaceholder);\n        }\n      };\n    }\n  }, [placeholder]);\n  const onSwipeMove = useCallback(x => {\n    if (animating.current || !material.current || !textures) return;\n    lastSwipePosition.current = x;\n    const absoluteX = Math.abs(x);\n    const containerWidth = canvasRect.width;\n    swipeDirection.current = x > 0 ? -1 : 1;\n    const swipePercentage = 1 - (absoluteX - containerWidth) / containerWidth * -1;\n    const nextIndex = determineIndex(imageIndex, null, images, swipeDirection.current);\n    const uniforms = material.current.uniforms;\n    const displacementClamp = Math.min(Math.max(swipePercentage, 0), 1);\n    uniforms.currentImage.value = textures[imageIndex];\n    uniforms.nextImage.value = textures[nextIndex];\n    uniforms.direction.value = swipeDirection.current;\n    uniforms.dispFactor.value = displacementClamp;\n    requestAnimationFrame(() => {\n      renderer.current.render(scene.current, camera.current);\n    });\n  }, [canvasRect, imageIndex, images, textures]);\n  const onSwipeEnd = useCallback(() => {\n    if (!material.current) return;\n    const uniforms = material.current.uniforms;\n    const duration = (1 - uniforms.dispFactor.value) * 1000;\n    const position = Math.abs(lastSwipePosition.current);\n    const minSwipeDistance = canvasRect.width * 0.2;\n    lastSwipePosition.current = 0;\n    if (animating.current) return;\n    if (position === 0 || !position) return;\n    if (position > minSwipeDistance) {\n      navigate({\n        duration,\n        direction: swipeDirection.current\n      });\n    } else {\n      uniforms.currentImage.value = uniforms.nextImage.value;\n      uniforms.nextImage.value = uniforms.currentImage.value;\n      uniforms.dispFactor.value = 1 - uniforms.dispFactor.value;\n      navigate({\n        direction: swipeDirection.current * -1,\n        index: imageIndex\n      });\n    }\n  }, [canvasRect, imageIndex, navigate]);\n  const handlePointerMove = useCallback(event => {\n    onSwipeMove(event.clientX - initSwipeX.current);\n  }, [onSwipeMove]);\n  const handlePointerUp = useCallback(() => {\n    setDragging(false);\n    onSwipeEnd();\n    document.removeEventListener('pointerup', handlePointerUp);\n    document.removeEventListener('pointermove', handlePointerMove);\n  }, [handlePointerMove, onSwipeEnd]);\n  const handlePointerDown = useCallback(event => {\n    initSwipeX.current = event.clientX;\n    setDragging(true);\n    document.addEventListener('pointermove', handlePointerMove);\n    document.addEventListener('pointerup', handlePointerUp);\n  }, [handlePointerMove, handlePointerUp]);\n  const handleKeyDown = event => {\n    switch (event.key) {\n      case 'ArrowRight':\n        navigate({\n          direction: 1\n        });\n        break;\n      case 'ArrowLeft':\n        navigate({\n          direction: -1\n        });\n        break;\n    }\n  };\n  return (\n    // eslint-disable-next-line jsx-a11y/no-static-element-interactions\n    <div className={styles.carousel} onKeyDown={handleKeyDown} {...rest}>\r\n      <div className={styles.content}>\r\n        <div className={styles.imageWrapper} data-dragging={dragging} onPointerDown={handlePointerDown} style={cssProps({\n          aspectRatio: `${width} / ${height}`\n        })}>\n          \r\n          <div aria-atomic className={styles.canvasWrapper} aria-live=\"polite\" aria-label={currentImageAlt} role=\"img\">\n            \r\n            <canvas aria-hidden className={styles.canvas} ref={canvas} />\r\n          </div>\r\n          {showPlaceholder && placeholder && <img aria-hidden className={styles.placeholder} data-loaded={loaded && !!textures} src={placeholder} ref={placeholderRef} alt=\"\" role=\"presentation\" />}\r\n        </div>\r\n        <button className={styles.button} data-prev={true} aria-label=\"Previous slide\" onClick={() => navigate({\n          direction: -1\n        })}>\n          \r\n          <ArrowLeft />\r\n        </button>\r\n        <button className={styles.button} data-next={true} aria-label=\"Next slide\" onClick={() => navigate({\n          direction: 1\n        })}>\n          \r\n          <ArrowRight />\r\n        </button>\r\n      </div>\r\n      <div className={styles.nav}>\r\n        {images.map((image, index) => <button className={styles.navButton} key={image.alt} onClick={() => onNavClick(index)} aria-label={`Jump to slide ${index + 1}`} aria-pressed={index === imageIndex} />)}\r\n      </div>\r\n    </div>\n  );\n};\n_s(Carousel, \"1TPVH2Hhjdrj9yBO6+Fq/IHfAj4=\", false, function () {\n  return [useReducedMotion, useInViewport];\n});\n_c = Carousel;\nfunction ArrowLeft() {\n  return <svg fill=\"currentColor\" width=\"18\" height=\"42\" viewBox=\"0 0 18 42\">\r\n      <path d=\"M18.03 1.375L16.47.125-.031 20.75l16.5 20.625 1.562-1.25L2.53 20.75z\" />\r\n    </svg>;\n}\n_c2 = ArrowLeft;\nfunction ArrowRight() {\n  return <svg fill=\"currentColor\" width=\"18\" height=\"42\" viewBox=\"0 0 18 42\">\r\n      <path d=\"M-.03 1.375L1.53.125l16.5 20.625-16.5 20.625-1.562-1.25 15.5-19.375z\" />\r\n    </svg>;\n}\n_c3 = ArrowRight;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Carousel\");\n$RefreshReg$(_c2, \"ArrowLeft\");\n$RefreshReg$(_c3, \"ArrowRight\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "export default {\"carousel\":\"carousel-module__carousel__VMfuy\",\"content\":\"carousel-module__content__3EbHu\",\"imageWrapper\":\"carousel-module__imageWrapper__Ip-dB\",\"canvasWrapper\":\"carousel-module__canvasWrapper__9srfA\",\"canvas\":\"carousel-module__canvas__NZTS0\",\"placeholder\":\"carousel-module__placeholder__P-DcB\",\"button\":\"carousel-module__button__MBfGb\",\"nav\":\"carousel-module__nav__9nvIC\",\"navButton\":\"carousel-module__navButton__0Q4nb\"};", "// REMIX HMR BEGIN\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\nimport.meta.hot = __hmr__.createHotContext(\n//@ts-expect-error\n\"app\\\\components\\\\carousel\\\\index.js\"\n);\nimport.meta.hot.lastModified = \"1759533528957.3867\";\n}\n// REMIX HMR END\n\nexport { Carousel } from './carousel';\r\n"],
  "mappings": "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",
  "names": ["textures", "rest", "animate"]
}
